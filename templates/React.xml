<templateSet group="React">
  <template name="scu" value="shouldComponentUpdate(nextProps, nextState) {&#10;  $END$&#10;}" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rrcomp" value="import React, {Component, PropTypes} from 'react';&#10;import {connect} from 'react-redux'&#10;&#10;class $COMPONENT$ extends Component {&#10;  render() {&#10;    return (&#10;      &lt;div&gt;$END$&lt;/div&gt;&#10;    );&#10;  }&#10;}&#10;&#10;$COMPONENT$.propTypes = {&#10;};&#10;&#10;$COMPONENT$.defaultProps = {&#10;};&#10;&#10;const mapStateToProps = (state) =&gt; {&#10;  return {&#10;  };&#10;};&#10;&#10;const mapDispatchToProps = (dispatch) =&gt; {&#10;  return {&#10;  };&#10;};&#10;&#10;export default connect(mapStateToProps, mapDispatchToProps)($COMPONENT$);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rfcomp" value="import React, {PropTypes} from 'react';&#10;&#10;const $COMPONENT$ = ({}) =&gt; {&#10;  return (&#10;    &#10;  );&#10;};&#10;&#10;$COMPONENT$.propTypes = {&#10;};&#10;&#10;$COMPONENT$.defaultProps = {&#10;};&#10;&#10;export default $COMPONENT$;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcomp" value="import React, {Component, PropTypes} from 'react';&#10;&#10;class $COMPONENT$ extends Component {&#10;  render() {&#10;    return (&#10;      &lt;div&gt;$END$&lt;/div&gt;&#10;    );&#10;  }&#10;}&#10;&#10;$COMPONENT$.propTypes = {&#10;};&#10;&#10;$COMPONENT$.defaultProps = {&#10;};&#10;&#10;export default $COMPONENT$;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwum" value="componentWillUnmount() {&#10;  $END$&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwrp" value="componentWillReceiveProps(nextProps) {&#10;  $END$&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cstr" value="constructor(props) {&#10;  super(props);&#10;  &#10;  this.state = {&#10;    $START$: $END$&#10;  };&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cdu" value="componentDidUpdate(prevProps, prevState) {&#10;  $END$&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cdm" value="componentDidMount() {&#10;  $END$&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="shit" value="const style = StyleSheet.create({&#10;  container: {&#10;    $END$&#10;  }&#10;})&#10;" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwm" value="componentWillMount() {&#10;  $END$&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>